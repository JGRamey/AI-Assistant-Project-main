import sqlite3
import time
from src.utils import encrypt_data, decrypt_data

def init_update_notes():
    conn = sqlite3.connect('logs/update_notes.db')
    c = conn.cursor()
    c.execute('CREATE TABLE IF NOT EXISTS updates (user_id TEXT, update_id TEXT, notes TEXT, timestamp INTEGER)')
    # Sample data
    encrypted_notes = encrypt_data('Updated trading_agent.py with new pattern detection, v1.2')
    c.execute('INSERT INTO updates VALUES (?, ?, ?, ?)',
              ('user123', 'update_1625378901', encrypted_notes, int(time.time())))
    encrypted_notes = encrypt_data('Added journal_agent.py for voice-to-text, v1.0')
    c.execute('INSERT INTO updates VALUES (?, ?, ?, ?)',
              ('user123', 'update_1625378902', encrypted_notes, int(time.time())))
    conn.commit()
    conn.close()
    print("Update notes initialized with sample data.")

def query_update_notes(user_id):
    conn = sqlite3.connect('logs/update_notes.db')
    c = conn.cursor()
    c.execute('SELECT * FROM updates WHERE user_id = ?', (user_id,))
    results = c.fetchall()
    conn.close()
    return [{'user_id': r[0], 'update_id': r[1], 'notes': decrypt_data(r[2]), 'timestamp': r[3]} for r in results]

if __name__ == '__main__':
    init_update_notes()
    print(query_update_notes('user123'))